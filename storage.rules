rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
    match /b/{bucket}/o {

        function isSharedTabset(tabsetId) {
            return firestore.exists(/databases/(default)/documents/shared-with/$(request.auth.uid)/tabsets/$(tabsetId));
        }

        function isPublic(tabsetId) {
          return firestore.exists(/databases/(default)/documents/public-tabsets/$(tabsetId));
          //return get(/databases/(default)/documents/public/tabsets).data.ids.contains(tabsetId);
        }

        match /users/{uid}/{allPaths=**} {
            allow read: if request.auth.uid == uid || isSharedTabset(resource.metadata.tabsetId) || isPublic(resource.metadata.tabsetId)
//            allow read: if debug(
//                    debug(request.auth.uid) == debug(resource.metadata.tabsetId)
//            );

            allow write: if request.auth.uid == uid
        }

        match /{allPaths=**} {
            allow read, write: if false;
        }
    }
}